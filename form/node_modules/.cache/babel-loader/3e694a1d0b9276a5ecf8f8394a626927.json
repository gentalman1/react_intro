{"ast":null,"code":"/* globals define */\n(function (root, factory) {\n  'use strict';\n  /* istanbul ignore next:cant test */\n\n  if (typeof module === 'object' && typeof module.exports === 'object') {\n    module.exports = factory();\n  } else if (typeof define === 'function' && define.amd) {\n    // AMD. Register as an anonymous module.\n    define([], factory);\n  } else {\n    // Browser globals\n    root.objectPath = factory();\n  }\n})(this, function () {\n  'use strict';\n\n  var _hasOwnProperty = Object.prototype.hasOwnProperty;\n\n  function isEmpty(value) {\n    if (!value) {\n      return true;\n    }\n\n    if (isArray(value) && value.length === 0) {\n      return true;\n    } else if (!isString(value)) {\n      for (var i in value) {\n        if (_hasOwnProperty.call(value, i)) {\n          return false;\n        }\n      }\n\n      return true;\n    }\n\n    return false;\n  }\n\n  function isNumber(value) {\n    return typeof value === 'number';\n  }\n\n  function isString(obj) {\n    return typeof obj === 'string';\n  }\n\n  function isArray(obj) {\n    return Array.isArray(obj);\n  }\n\n  function getKey(key) {\n    var intKey = parseInt(key);\n\n    if (intKey.toString() === key) {\n      return intKey;\n    }\n\n    return key;\n  }\n\n  var objectPathImmutable = function (src) {\n    var dest = src;\n    var committed = false;\n    var transaction = Object.keys(api).reduce(function (proxy, prop) {\n      /* istanbul ignore else */\n      if (typeof api[prop] === 'function') {\n        proxy[prop] = function () {\n          var args = [dest, src].concat(Array.prototype.slice.call(arguments));\n\n          if (committed) {\n            throw new Error('Cannot call ' + prop + ' after `value`');\n          }\n\n          dest = api[prop].apply(null, args);\n          return transaction;\n        };\n      }\n\n      return proxy;\n    }, {});\n\n    transaction.value = function () {\n      committed = true;\n      return dest;\n    };\n\n    return transaction;\n  };\n\n  function clone(obj, createIfEmpty, assumeArray) {\n    if (obj == null) {\n      if (createIfEmpty) {\n        if (assumeArray) {\n          return [];\n        }\n\n        return {};\n      }\n\n      return obj;\n    } else if (isArray(obj)) {\n      return obj.slice();\n    }\n\n    var res = {};\n\n    for (var key in obj) {\n      if (obj.hasOwnProperty(key)) {\n        res[key] = obj[key];\n      }\n    }\n\n    return res;\n  }\n\n  function changeImmutable(dest, src, path, changeCallback) {\n    if (isNumber(path)) {\n      path = [path];\n    }\n\n    if (isEmpty(path)) {\n      return src;\n    }\n\n    if (isString(path)) {\n      return changeImmutable(dest, src, path.split('.').map(getKey), changeCallback);\n    }\n\n    var currentPath = path[0];\n\n    if (!dest || dest === src) {\n      dest = clone(src, true, isNumber(currentPath));\n    }\n\n    if (path.length === 1) {\n      return changeCallback(dest, currentPath);\n    }\n\n    if (src != null) {\n      src = src[currentPath];\n    }\n\n    dest[currentPath] = changeImmutable(dest[currentPath], src, path.slice(1), changeCallback);\n    return dest;\n  }\n\n  var api = {};\n\n  api.set = function set(dest, src, path, value) {\n    return changeImmutable(dest, src, path, function (clonedObj, finalPath) {\n      clonedObj[finalPath] = value;\n      return clonedObj;\n    });\n  };\n\n  api.update = function update(dest, src, path, updater) {\n    return changeImmutable(dest, src, path, function (clonedObj, finalPath) {\n      clonedObj[finalPath] = updater(clonedObj[finalPath]);\n      return clonedObj;\n    });\n  };\n\n  api.push = function push(dest, src, path\n  /*, values */\n  ) {\n    var values = Array.prototype.slice.call(arguments, 3);\n    return changeImmutable(dest, src, path, function (clonedObj, finalPath) {\n      if (!isArray(clonedObj[finalPath])) {\n        clonedObj[finalPath] = values;\n      } else {\n        clonedObj[finalPath] = clonedObj[finalPath].concat(values);\n      }\n\n      return clonedObj;\n    });\n  };\n\n  api.insert = function insert(dest, src, path, value, at) {\n    at = ~~at;\n    return changeImmutable(dest, src, path, function (clonedObj, finalPath) {\n      var arr = clonedObj[finalPath];\n\n      if (!isArray(arr)) {\n        if (arr != null && typeof arr !== 'undefined') {\n          throw new Error('Expected ' + path + 'to be an array. Instead got ' + typeof path);\n        }\n\n        arr = [];\n      }\n\n      var first = arr.slice(0, at);\n      first.push(value);\n      clonedObj[finalPath] = first.concat(arr.slice(at));\n      return clonedObj;\n    });\n  };\n\n  api.del = function del(dest, src, path, value, at) {\n    return changeImmutable(dest, src, path, function (clonedObj, finalPath) {\n      if (Array.isArray(clonedObj)) {\n        if (clonedObj[finalPath] !== undefined) {\n          clonedObj.splice(finalPath, 1);\n        }\n      } else {\n        if (clonedObj.hasOwnProperty(finalPath)) {\n          delete clonedObj[finalPath];\n        }\n      }\n\n      return clonedObj;\n    });\n  };\n\n  api.assign = function assign(dest, src, path, source) {\n    return changeImmutable(dest, src, path, function (clonedObj, finalPath) {\n      source = Object(source);\n      var target = clone(clonedObj[finalPath], true);\n\n      for (var key in source) {\n        if (_hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n\n      clonedObj[finalPath] = target;\n      return clonedObj;\n    });\n  };\n\n  return Object.keys(api).reduce(function (objectPathImmutable, method) {\n    objectPathImmutable[method] = api[method].bind(null, null);\n    return objectPathImmutable;\n  }, objectPathImmutable);\n});","map":{"version":3,"sources":["/home/dev43/REACT/form/node_modules/object-path-immutable/index.js"],"names":["root","factory","module","exports","define","amd","objectPath","_hasOwnProperty","Object","prototype","hasOwnProperty","isEmpty","value","isArray","length","isString","i","call","isNumber","obj","Array","getKey","key","intKey","parseInt","toString","objectPathImmutable","src","dest","committed","transaction","keys","api","reduce","proxy","prop","args","concat","slice","arguments","Error","apply","clone","createIfEmpty","assumeArray","res","changeImmutable","path","changeCallback","split","map","currentPath","set","clonedObj","finalPath","update","updater","push","values","insert","at","arr","first","del","undefined","splice","assign","source","target","method","bind"],"mappings":"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","sourcesContent":["/* globals define */\n\n(function (root, factory) {\n  'use strict'\n\n  /* istanbul ignore next:cant test */\n  if (typeof module === 'object' && typeof module.exports === 'object') {\n    module.exports = factory()\n  } else if (typeof define === 'function' && define.amd) {\n    // AMD. Register as an anonymous module.\n    define([], factory)\n  } else {\n    // Browser globals\n    root.objectPath = factory()\n  }\n})(this, function () {\n  'use strict'\n  var _hasOwnProperty = Object.prototype.hasOwnProperty\n\n  function isEmpty (value) {\n    if (!value) {\n      return true\n    }\n    if (isArray(value) && value.length === 0) {\n      return true\n    } else if (!isString(value)) {\n      for (var i in value) {\n        if (_hasOwnProperty.call(value, i)) {\n          return false\n        }\n      }\n      return true\n    }\n    return false\n  }\n\n  function isNumber (value) {\n    return typeof value === 'number'\n  }\n\n  function isString (obj) {\n    return typeof obj === 'string'\n  }\n\n  function isArray (obj) {\n    return Array.isArray(obj)\n  }\n\n  function getKey (key) {\n    var intKey = parseInt(key)\n    if (intKey.toString() === key) {\n      return intKey\n    }\n    return key\n  }\n\n  var objectPathImmutable = function (src) {\n    var dest = src\n    var committed = false\n\n    var transaction = Object.keys(api).reduce(function (proxy, prop) {\n      /* istanbul ignore else */\n      if (typeof api[prop] === 'function') {\n        proxy[prop] = function () {\n          var args = [dest, src].concat(Array.prototype.slice.call(arguments))\n\n          if (committed) {\n            throw new Error('Cannot call ' + prop + ' after `value`')\n          }\n\n          dest = api[prop].apply(null, args)\n\n          return transaction\n        }\n      }\n\n      return proxy\n    }, {})\n\n    transaction.value = function () {\n      committed = true\n      return dest\n    }\n\n    return transaction\n  }\n\n  function clone (obj, createIfEmpty, assumeArray) {\n    if (obj == null) {\n      if (createIfEmpty) {\n        if (assumeArray) {\n          return []\n        }\n\n        return {}\n      }\n\n      return obj\n    } else if (isArray(obj)) {\n      return obj.slice()\n    }\n\n    var res = {}\n    for (var key in obj) {\n      if (obj.hasOwnProperty(key)) {\n        res[key] = obj[key]\n      }\n    }\n\n    return res\n  }\n\n  function changeImmutable (dest, src, path, changeCallback) {\n    if (isNumber(path)) {\n      path = [path]\n    }\n    if (isEmpty(path)) {\n      return src\n    }\n    if (isString(path)) {\n      return changeImmutable(dest, src, path.split('.').map(getKey), changeCallback)\n    }\n    var currentPath = path[0]\n\n    if (!dest || dest === src) {\n      dest = clone(src, true, isNumber(currentPath))\n    }\n\n    if (path.length === 1) {\n      return changeCallback(dest, currentPath)\n    }\n\n    if (src != null) {\n      src = src[currentPath]\n    }\n\n    dest[currentPath] = changeImmutable(dest[currentPath], src, path.slice(1), changeCallback)\n\n    return dest\n  }\n\n  var api = {}\n  api.set = function set (dest, src, path, value) {\n    return changeImmutable(dest, src, path, function (clonedObj, finalPath) {\n      clonedObj[finalPath] = value\n      return clonedObj\n    })\n  }\n\n  api.update = function update (dest, src, path, updater) {\n    return changeImmutable(dest, src, path, function (clonedObj, finalPath) {\n      clonedObj[finalPath] = updater(clonedObj[finalPath])\n      return clonedObj\n    })\n  }\n\n  api.push = function push (dest, src, path /*, values */) {\n    var values = Array.prototype.slice.call(arguments, 3)\n    return changeImmutable(dest, src, path, function (clonedObj, finalPath) {\n      if (!isArray(clonedObj[finalPath])) {\n        clonedObj[finalPath] = values\n      } else {\n        clonedObj[finalPath] = clonedObj[finalPath].concat(values)\n      }\n      return clonedObj\n    })\n  }\n\n  api.insert = function insert (dest, src, path, value, at) {\n    at = ~~at\n    return changeImmutable(dest, src, path, function (clonedObj, finalPath) {\n      var arr = clonedObj[finalPath]\n      if (!isArray(arr)) {\n        if (arr != null && typeof arr !== 'undefined') {\n          throw new Error('Expected ' + path + 'to be an array. Instead got ' + typeof path)\n        }\n        arr = []\n      }\n\n      var first = arr.slice(0, at)\n      first.push(value)\n      clonedObj[finalPath] = first.concat(arr.slice(at))\n      return clonedObj\n    })\n  }\n\n  api.del = function del (dest, src, path, value, at) {\n    return changeImmutable(dest, src, path, function (clonedObj, finalPath) {\n      if (Array.isArray(clonedObj)) {\n        if (clonedObj[finalPath] !== undefined) {\n          clonedObj.splice(finalPath, 1)\n        }\n      } else {\n        if (clonedObj.hasOwnProperty(finalPath)) {\n          delete clonedObj[finalPath]\n        }\n      }\n      return clonedObj\n    })\n  }\n\n  api.assign = function assign (dest, src, path, source) {\n    return changeImmutable(dest, src, path, function (clonedObj, finalPath) {\n      source = Object(source)\n      var target = clone(clonedObj[finalPath], true)\n\n      for (var key in source) {\n        if (_hasOwnProperty.call(source, key)) {\n          target[key] = source[key]\n        }\n      }\n\n      clonedObj[finalPath] = target\n      return clonedObj\n    })\n  }\n\n  return Object.keys(api).reduce(function (objectPathImmutable, method) {\n    objectPathImmutable[method] = api[method].bind(null, null)\n\n    return objectPathImmutable\n  }, objectPathImmutable)\n})\n"]},"metadata":{},"sourceType":"script"}